<Application x:Class="SchoolManagementSystem.App" 
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
            xmlns:local="clr-namespace:SchoolManagementSystem"
            xmlns:hlp="clr-namespace:SchoolManagementSystem.Helpers"
            xmlns:views="clr-namespace:SchoolManagementSystem.Views" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            d1p1:Ignorable="d" 
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:vm="clr-namespace:SchoolManagementSystem.ViewModels"
            StartupUri="MainWindow.xaml" >
    
  <Application.Resources>
      
        <!-- Error Display as ToolTip -->
        <!--
        Reference: WPF TextBox Validation with IDataErrorInfo
        Source: http://www.codearsenal.net/2012/06/wpf-textbox-validation-idataerrorinfo.html#.WfULq1tSw1I
        Author: Code Arsenal
        -->
        <ControlTemplate x:Key="inputDataError">
            <DockPanel LastChildFill="true">
                <Border DockPanel.Dock="right" Margin="5,0,0,0"
                                ToolTip="{Binding ElementName=custom, 
                                          Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" 
                                   FontWeight="Bold" Foreground="Red" />
                </Border>
                <AdornedElementPlaceholder Name="custom" VerticalAlignment="Center" >
                    <Border BorderBrush="red" BorderThickness="1" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        
        <!-- Menu Item Style when Mouse Clicked -->
        <!-- 
        Reference: Background color when on mouse hover in a WPF menu
        Source: https://social.msdn.microsoft.com/Forums/vstudio/en-US/212fdbc6-20ff-46f1-a5ed-c74076e2fdd9/background-color-when-on-mouse-hover-in-a-wpf-menu?forum=wpf
        Author: Mustehsan Ikram (May 17, 2010)
        -->
        <Style x:Key="menuItem" TargetType="MenuItem">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightBlue" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="CadetBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>
      
        <!-- Data Grid Style -->
        <Style TargetType="DataGrid">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="#EAEEF0" />
            <Setter Property="Padding" Value="5" />
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
        </Style>

        <Style x:Key="btnEdit" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="#eaeaea" />
        </Style>

        <!-- Item Source for Combo Box -->
        <!--
        Reference: Set ItemsSource of a ComboBox to an Array of Integers?
        Source: https://stackoverflow.com/questions/1825480/set-itemssource-of-a-combobox-to-an-array-of-integers
        Author: Shimmy
        Sites: stackoverflow.com
        -->
        <x:Array x:Key="subjects" Type="{x:Type sys:String}">
            <sys:String>Science</sys:String>
            <sys:String>Mathematics</sys:String>
            <sys:String>Geometry</sys:String>
            <sys:String>Geography</sys:String>
            <sys:String>Physics</sys:String>
            <sys:String>Biology</sys:String>
            <sys:String>Algebra</sys:String>
            <sys:String>History</sys:String>
            <sys:String>Design and Technology</sys:String>
            <sys:String>English</sys:String>
        </x:Array>
      
        <!-- Resources for 'P' Part Time Teacher or 'F' Full Time Teacher -->
        <sys:Char x:Key="PartChar">P</sys:Char>
        <sys:Char x:Key="FullChar">F</sys:Char>
      
        <DataTemplate DataType="{x:Type vm:LoginViewModel}">
            <views:LoginAdminView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:RegisterViewModel}">
            <views:RegisterAdminView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:HomeViewModel}" >
            <views:HomeView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SettingViewModel}">
            <views:SettingView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:TeacherManagementViewModel}" >
            <views:TeacherManagementView />
        </DataTemplate>

        <hlp:RadioTeacherTypeConvertHelper x:Key="RadioButtonConverter" />

    </Application.Resources>
</Application>